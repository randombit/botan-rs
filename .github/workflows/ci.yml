name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  rustfmt:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt

      - uses: actions/checkout@v2

      - run: cargo fmt -- --check
  clippy:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: clippy

      - uses: actions/checkout@v2

      - run: cargo +nightly clippy -- --deny warnings
  ci:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false

      matrix:
        include:
          - toolchain: stable
            target: x86_64-unknown-linux-gnu
          - toolchain: stable
            features: no-std
            target: x86_64-unknown-linux-gnu
          - toolchain: stable
            features: botan3
            target: x86_64-unknown-linux-gnu
            cache_id: botan3
          - toolchain: stable
            features: vendored
            target: x86_64-unknown-linux-gnu
            cache_id: vendored
          - toolchain: 1.64.0 # MSRV
            target: x86_64-unknown-linux-gnu
          - toolchain: nightly
            target: x86_64-unknown-linux-gnu
          - toolchain: nightly
            features: no-std
            target: x86_64-unknown-linux-gnu

    steps:
      - run: sudo apt-get -qq install ccache libbotan-2-dev
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
            path: |
              ~/.ccache
              ~/.cargo
            key: ${{ matrix.target }}-${{ matrix.toolchain }}-${{ matrix.cache_id }}-${{ github.run_id }}
            restore-keys: |
               ${{ matrix.target }}-${{ matrix.toolchain }}-${{ matrix.cache_id }}
      - uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      - run: ./.ci/build.sh ${{ matrix.features }}

  ci_mac:
    runs-on: macos-latest

    strategy:
      fail-fast: false

      matrix:
        include:
          - toolchain: stable
            target: x86_64-apple-darwin
          - toolchain: stable
            features: vendored
            target: x86_64-apple-darwin
            cache_id: vendored
          - toolchain: nightly
            target: x86_64-apple-darwin

    steps:
      - run: brew install ccache botan
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
            path: |
              /Users/runner/Library/Caches/ccache
              ~/.cargo
            key: ${{ matrix.target }}-${{ matrix.toolchain }}-${{ matrix.cache_id }}-${{ github.run_id }}
            restore-keys: |
               ${{ matrix.target }}-${{ matrix.toolchain }}-${{ matrix.cache_id }}
      - uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      - run: ./.ci/build.sh ${{ matrix.features }}
